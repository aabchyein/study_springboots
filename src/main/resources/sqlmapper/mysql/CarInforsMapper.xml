<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CarInfors">
        <!-- 검색 -->
	<select id="selectSearch" parameterType="Map" resultType="Map">
        SELECT * 
        FROM db_cars.car_infors
        where 1 = 1 <!-- 정해진 상수이므로 쿼리문이 where절을 무시하고 쿼리문 실행함. 동적 쿼리문으로 만들어줌--> 
        <choose>
                <when test="search == 'YEAR'"
                >
                <![CDATA[
                AND YEAR > #{words} 
                ]]>
                </when>
                <otherwise>
                AND CAR_NAME LIKE CONCAT(#{words},'%')
                </otherwise>
        </choose>
        ;
	</select>
        <!-- 변수 words에 2020, 소%를 담아줌 // search에 year와 car_name을 담아줌  -->
        <!-- YEAR > 2000에서 사이에 있는 기호가 xml태그가 아니라 sql 쿼리 기호라는 것을 알려주기 위해서 CDATA라는 태그에 넣어줌 -->
        <!-- // 외부에서 검색어로 넣어주는 것을 변수 words에 담아줌 -->
        <!-- CONCAT은 mybatis에 있는 내부 메서드, '소%'라고 쓰면 그냥 문자열로 인식하기 때문에 concat을 써준다. string으로 연결해줄 때 사용함 -->

        <!-- mybatis foreach -->
        <select id="selectInUID" parameterType="Map" resultType="Map">  <!-- mybatis로 오기 전에 service에서 MAP에 CAR_INFOR_ID_LIST를 넣어주려고 한다 -->
        SELECT *
        FROM db_cars.car_infors
        WHERE 1 = 1
        AND CAR_INFOR_ID IN 
        <foreach item="CAR_INFOR_ID" index="index" collection="CAR_INFOR_ID_LIST" 
                open="(" separator="," close=")" nullable="true">
                <!-- ('CI002', 'CI004', 'CI005') -->
                #{CAR_INFOR_ID}
        </foreach>
        ;
	</select>
        <!-- foreach문은 반복되면서 첫번째, 두번째 순서대로 값을 뽑아낸다. -->
        <!-- collection은 파라미터로 넘어온 것이고, 그것을 풀어낸 것이 item이다. item 뒤의 ""안에 있는 것은 변수 이름이므로 꼭 item이 아니어도 내가 원하는대로 지정할 수 있다. -->

        <!-- 전체 -->
	<select id="selectAll" parameterType="Map" resultType="Map">
        SELECT * 
        FROM db_cars.car_infors
        where 1 = 1 <!-- 정해진 상수이므로 쿼리문이 where절을 무시하고 쿼리문 실행함. 동적 쿼리문으로 만들어줌--> 
	</select>

        <!-- 상세 -->
	<select id="selectByUID" parameterType="Map" resultType="Map">
        SELECT * 
        FROM db_cars.car_infors
        where CAR_INFOR_ID = #{CAR_INFOR_ID}   
	</select>

        <!-- 입력 -->
	<insert id="insert" parameterType="Map" > <!-- parameter 로 넘어온 map이 values에 담겨진다 -->
        insert into car_infors
        (CAR_NAME, YEAR, CAR_INFOR_ID, COMPANY_ID)
        values
        (#{CAR_NAME}, #{YEAR}, #{CAR_INFOR_ID}, #{COMPANY_ID})
	</insert>

        <!-- 수정 -->
	<update id="update" parameterType="Map" >
        UPDATE car_infors
        SET CAR_NAME = #{CAR_NAME}
        WHERE CAR_INFOR_ID = #{CAR_INFOR_ID}
	</update>

        <!-- 삭제 -->
	<delete id="delete" parameterType="Map" >
        DELETE FROM car_infors
        WHERE CAR_INFOR_ID = #{CAR_INFOR_ID}
	</delete>


</mapper>


<!-- 환경변수에서 이 폴더 안에 넣는다고 설정을 했기 때문에 이 안에 파잃 형성 -->
<!-- 파일 이름은 %Mapper.xml로 만들어줘야 한다. -->
<!-- where절에서 = 왼쪽은 column 이름, 오른쪽은 변수 이름 -->
<!-- <></>태그는 mybatis에 정해진 것을 써주는 것이고 id는 우리가 이름을 만들어서 부여해주면 되고 unique해야 한다. -->